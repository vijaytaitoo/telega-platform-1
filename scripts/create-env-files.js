#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è .env —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞–∫–µ—Ç–∞
const envConfigs = {
  'apps/telega-interface': {
    filename: '.env',
    content: `# Tele‚Ä¢Ga Interface Environment
VITE_API_BASE_URL=http://localhost:3030/api/v1
VITE_TELEGRAM_BOT_NAME=@your_bot_name
VITE_TELEGA_VERSION=1.0.0
VITE_PORT=5173
`
  },
  'apps/telega-studio': {
    filename: '.env.local',
    content: `# Tele‚Ä¢Ga Studio Environment
NEXT_PUBLIC_API_BASE_URL=http://localhost:3030/api/v1
NEXT_PUBLIC_TELEGRAM_BOT_NAME=@your_bot_name
NEXT_PUBLIC_TELEGA_VERSION=1.0.0
NEXT_PUBLIC_PORT=3000
`
  },
  'backend/gateway': {
    filename: '.env',
    content: `# Tele‚Ä¢Ga Gateway Environment
PORT=3030
NODE_ENV=development
DATABASE_URL=postgres://user:password@localhost:5432/telega
JWT_SECRET=your-super-secret-jwt-key-change-this
STRIPE_SECRET_KEY=sk_test_your_stripe_key
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
TELEGRAM_WEBHOOK_URL=https://your-domain.com/webhook
`
  },
  'backend/services/auth-service': {
    filename: '.env',
    content: `# Tele‚Ä¢Ga Auth Service Environment
PORT=3001
NODE_ENV=development
DATABASE_URL=postgres://user:password@localhost:5432/telega
JWT_SECRET=your-super-secret-jwt-key-change-this
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
`
  },
  'backend/services/payment-service': {
    filename: '.env',
    content: `# Tele‚Ä¢Ga Payment Service Environment
PORT=3002
NODE_ENV=development
STRIPE_SECRET_KEY=sk_test_your_stripe_key
PAYPAL_CLIENT_ID=your_paypal_client_id
PAYPAL_CLIENT_SECRET=your_paypal_client_secret
`
  },
  'backend/services/telegram-service': {
    filename: '.env',
    content: `# Tele‚Ä¢Ga Telegram Service Environment
PORT=3003
NODE_ENV=development
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
WEB_APP_URL=https://your-webapp-url.com
BOT_NAME=your_bot_name
ADMIN_CHAT_ID=123456789
`
  },
  'mass-mailer': {
    filename: '.env',
    content: `# Tele‚Ä¢Ga Mass Mailer Environment
PORT=3004
NODE_ENV=development
DATABASE_URL=postgres://user:password@localhost:5432/telega
TELEGRAM_BOT_TOKEN=your_telegram_bot_token
REDIS_URL=redis://localhost:6379
`
  },
  'frontend': {
    filename: '.env',
    content: `# Tele‚Ä¢Ga Frontend Environment
VITE_API_BASE_URL=http://localhost:3030/api/v1
VITE_TELEGRAM_BOT_NAME=@your_bot_name
VITE_TELEGA_VERSION=1.0.0
VITE_PORT=5173
`
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
function createEnvFile(packagePath, config) {
  const fullPath = path.join(process.cwd(), packagePath);
  const envPath = path.join(fullPath, config.filename);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
  if (!fs.existsSync(fullPath)) {
    console.log(`‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${packagePath} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ .env —Ñ–∞–π–ª
  if (fs.existsSync(envPath)) {
    console.log(`‚ö†Ô∏è  ${config.filename} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ ${packagePath}, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
    return;
  }
  
  try {
    fs.writeFileSync(envPath, config.content);
    console.log(`‚úÖ –°–æ–∑–¥–∞–Ω ${config.filename} –≤ ${packagePath}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ ${config.filename} –≤ ${packagePath}:`, error.message);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è .env.example —Ñ–∞–π–ª–æ–≤
function createEnvExampleFiles() {
  console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ .env.example —Ñ–∞–π–ª–æ–≤...\n');
  
  Object.entries(envConfigs).forEach(([packagePath, config]) => {
    const fullPath = path.join(process.cwd(), packagePath);
    const examplePath = path.join(fullPath, '.env.example');
    
    if (!fs.existsSync(fullPath)) {
      console.log(`‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${packagePath} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º`);
      return;
    }
    
    try {
      fs.writeFileSync(examplePath, config.content);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω .env.example –≤ ${packagePath}`);
    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ .env.example –≤ ${packagePath}:`, error.message);
    }
  });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  console.log('üöÄ Tele‚Ä¢Ga - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è .env —Ñ–∞–π–ª–æ–≤\n');
  
  // –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª—ã
  console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–æ–≤...\n');
  Object.entries(envConfigs).forEach(([packagePath, config]) => {
    createEnvFile(packagePath, config);
  });
  
  // –°–æ–∑–¥–∞–µ–º .env.example —Ñ–∞–π–ª—ã
  createEnvExampleFiles();
  
  console.log('\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log('1. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ç–æ–∫–µ–Ω—ã –∏ –∫–ª—é—á–∏ –≤ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö .env —Ñ–∞–π–ª–∞—Ö');
  console.log('2. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö PostgreSQL');
  console.log('3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç: pnpm run dev');
  console.log('\n‚ö†Ô∏è  –í–ê–ñ–ù–û: –ò–∑–º–µ–Ω–∏—Ç–µ –≤—Å–µ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏ –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–æ–º!');
}

// –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
if (require.main === module) {
  main();
}

module.exports = { createEnvFile, createEnvExampleFiles, envConfigs }; 