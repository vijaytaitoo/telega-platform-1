# =============================================================================
# Teleâ€¢Ga Platform - Production Values
# =============================================================================

# Global settings
global:
  environment: production
  domain: telega.uz
  imageRegistry: ghcr.io/your-username
  imagePullSecrets:
    - name: ghcr-secret

# =============================================================================
# SECRETS (Base64 encoded)
# =============================================================================
secrets:
  telegramBotToken: "eW91cl9ib3RfdG9rZW5faGVyZQ=="
  jwtSecret: "OCpNNnQzJUBeUGY2ZEJ2NnxNU0lVXz1FaDo8Ol4/Y1ZYNnBeNHdWNGQxREpsR1dANHBWdU08aUMzYXJHN2U/Xg=="
  jwtRefreshSecret: "c15oW0dTPT02SCRwZSZ8KnJFSUhxe2hbM2czRzk3IV5ndVRbPls8bFMmKCFOITQyLlchZzJZLV40YkVXanBnSQ=="
  databaseUrl: "cG9zdGdyZXNxbDovL3RlbGVnYV91c2VyOnN1cGVyc2VjdXJlcGFzc3dvcmRAcG9zdGdyZXM6NTQzMi90ZWxlZ2FfZGI="
  redisUrl: "cmVkaXM6Ly9yZWRpczo2Mzc5"
  minioAccessKey: "bWluaW9hZG1pbg=="
  minioSecretKey: "bWluaW9hZG1pbg=="
  stripeSecretKey: "c2tfdGVzdF95b3VyX3N0cmlwZV9zZWNyZXRfa2V5X2hlcmU="
  paypalClientId: "eW91cl9wYXlwYWxfY2xpZW50X2lkX2hlcmU="
  paypalClientSecret: "eW91cl9wYXlwYWxfY2xpZW50X3NlY3JldF9oZXJl"
  openaiApiKey: "eW91cl9vcGVuYWlfYXBpX2tleV9oZXJl"
  postgresPassword: "c3VwZXJzZWN1cmVwYXNzd29yZA=="
  grafanaPassword: "Z3JhZmFuYV9wYXNzd29yZA=="

# =============================================================================
# GATEWAY SERVICE
# =============================================================================
gateway:
  enabled: true
  replicaCount: 3
  image:
    repository: telega-gateway
    tag: "latest"
    pullPolicy: Always
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  env:
    NODE_ENV: production
    PORT: 3001
    TELEGRAM_BOT_TOKEN: "{{ .Values.secrets.telegramBotToken }}"
    JWT_SECRET: "{{ .Values.secrets.jwtSecret }}"
    JWT_REFRESH_SECRET: "{{ .Values.secrets.jwtRefreshSecret }}"
    DATABASE_URL: "{{ .Values.secrets.databaseUrl }}"
    REDIS_URL: "{{ .Values.secrets.redisUrl }}"
    CORS_ORIGIN: "https://shop.telega.uz,https://studio.telega.uz,https://api.telega.uz"
    LOG_LEVEL: info

# =============================================================================
# FRONTEND INTERFACE (SHOP)
# =============================================================================
interface:
  enabled: true
  replicaCount: 2
  image:
    repository: telega-interface
    tag: "latest"
    pullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  env:
    NODE_ENV: production
    VITE_API_URL: "https://api.telega.uz"
    VITE_TELEGRAM_BOT_USERNAME: "@TeleGaBot"

# =============================================================================
# FRONTEND STUDIO (ADMIN)
# =============================================================================
studio:
  enabled: true
  replicaCount: 2
  image:
    repository: telega-studio
    tag: "latest"
    pullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  env:
    NODE_ENV: production
    NEXT_PUBLIC_API_URL: "https://api.telega.uz"
    NEXT_PUBLIC_TELEGRAM_BOT_USERNAME: "@TeleGaBot"

# =============================================================================
# TELEGRAM SERVICE
# =============================================================================
telegramService:
  enabled: true
  replicaCount: 2
  image:
    repository: telega-telegram-service
    tag: "latest"
    pullPolicy: Always
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi
  env:
    NODE_ENV: production
    TELEGRAM_BOT_TOKEN: "{{ .Values.secrets.telegramBotToken }}"
    TELEGRAM_WEBHOOK_URL: "https://api.telega.uz/webhook/telegram"
    DATABASE_URL: "{{ .Values.secrets.databaseUrl }}"
    REDIS_URL: "{{ .Values.secrets.redisUrl }}"

# =============================================================================
# AUTH SERVICE
# =============================================================================
authService:
  enabled: true
  replicaCount: 2
  image:
    repository: telega-auth-service
    tag: "latest"
    pullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  env:
    NODE_ENV: production
    JWT_SECRET: "{{ .Values.secrets.jwtSecret }}"
    JWT_REFRESH_SECRET: "{{ .Values.secrets.jwtRefreshSecret }}"
    DATABASE_URL: "{{ .Values.secrets.databaseUrl }}"

# =============================================================================
# PAYMENT SERVICE
# =============================================================================
paymentService:
  enabled: true
  replicaCount: 2
  image:
    repository: telega-payment-service
    tag: "latest"
    pullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  env:
    NODE_ENV: production
    STRIPE_SECRET_KEY: "{{ .Values.secrets.stripeSecretKey }}"
    PAYPAL_CLIENT_ID: "{{ .Values.secrets.paypalClientId }}"
    PAYPAL_CLIENT_SECRET: "{{ .Values.secrets.paypalClientSecret }}"
    DATABASE_URL: "{{ .Values.secrets.databaseUrl }}"

# =============================================================================
# MASS MAILER SERVICE
# =============================================================================
massMailer:
  enabled: true
  replicaCount: 1
  image:
    repository: telega-mass-mailer
    tag: "latest"
    pullPolicy: Always
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  env:
    NODE_ENV: production
    TELEGRAM_BOT_TOKEN: "{{ .Values.secrets.telegramBotToken }}"
    DATABASE_URL: "{{ .Values.secrets.databaseUrl }}"
    REDIS_URL: "{{ .Values.secrets.redisUrl }}"

# =============================================================================
# INGRESS CONFIGURATION
# =============================================================================
ingress:
  enabled: true
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: api.telega.uz
      paths:
        - path: /
          pathType: Prefix
          service:
            name: tele-ga-gateway
            port:
              number: 3001
    - host: shop.telega.uz
      paths:
        - path: /
          pathType: Prefix
          service:
            name: tele-ga-interface
            port:
              number: 3002
    - host: studio.telega.uz
      paths:
        - path: /
          pathType: Prefix
          service:
            name: tele-ga-studio
            port:
              number: 3003
  tls:
    - secretName: telega-tls
      hosts:
        - api.telega.uz
        - shop.telega.uz
        - studio.telega.uz

# =============================================================================
# DATABASE (PostgreSQL)
# =============================================================================
postgres:
  enabled: true
  image:
    repository: postgres
    tag: "15-alpine"
  persistence:
    enabled: true
    size: 20Gi
    storageClass: "standard"
  env:
    POSTGRES_DB: telega_db
    POSTGRES_USER: telega_user
    POSTGRES_PASSWORD: "{{ .Values.secrets.postgresPassword }}"
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

# =============================================================================
# REDIS
# =============================================================================
redis:
  enabled: true
  image:
    repository: redis
    tag: "7-alpine"
  persistence:
    enabled: true
    size: 5Gi
    storageClass: "standard"
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi

# =============================================================================
# MINIO OBJECT STORAGE
# =============================================================================
minio:
  enabled: true
  image:
    repository: minio/minio
    tag: "RELEASE.2023-10-25T16-07-38Z"
  persistence:
    enabled: true
    size: 50Gi
    storageClass: "standard"
  env:
    MINIO_ROOT_USER: "{{ .Values.secrets.minioAccessKey }}"
    MINIO_ROOT_PASSWORD: "{{ .Values.secrets.minioSecretKey }}"
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

# =============================================================================
# MONITORING (Prometheus + Grafana)
# =============================================================================
monitoring:
  enabled: true
  prometheus:
    enabled: true
    persistence:
      enabled: true
      size: 10Gi
  grafana:
    enabled: true
    persistence:
      enabled: true
      size: 5Gi
    adminPassword: "{{ .Values.secrets.grafanaPassword }}"

# =============================================================================
# LOGGING (ELK Stack)
# =============================================================================
logging:
  enabled: true
  elasticsearch:
    enabled: true
    persistence:
      enabled: true
      size: 20Gi
  kibana:
    enabled: true
    persistence:
      enabled: true
      size: 5Gi

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: 30  # days
  storage:
    type: s3
    bucket: telega-backups
    region: us-east-1
